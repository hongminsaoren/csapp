
optimization0:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	pushq  0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmpq *0x2f93(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmpq *0x2f9d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <clock@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmpq *0x2f5d(%rip)        # 3fc8 <clock@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmpq *0x2f55(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	4c 8d 05 e6 02 00 00 	lea    0x2e6(%rip),%r8        # 1380 <__libc_csu_fini>
    109a:	48 8d 0d 6f 02 00 00 	lea    0x26f(%rip),%rcx        # 1310 <__libc_csu_init>
    10a1:	48 8d 3d 38 01 00 00 	lea    0x138(%rip),%rdi        # 11e0 <main>
    10a8:	ff 15 32 2f 00 00    	callq  *0x2f32(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ae:	f4                   	hlt    
    10af:	90                   	nop

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	callq  1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	callq  10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	retq   
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001169 <fibonacci>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	53                   	push   %rbx
    1172:	48 83 ec 28          	sub    $0x28,%rsp
    1176:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1179:	8b 45 dc             	mov    -0x24(%rbp),%eax
    117c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    117f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1182:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1185:	c7 45 ec 28 00 00 00 	movl   $0x28,-0x14(%rbp)
    118c:	b8 00 00 00 00       	mov    $0x0,%eax
    1191:	e8 da 00 00 00       	callq  1270 <helper_func>
    1196:	89 c1                	mov    %eax,%ecx
    1198:	8b 45 dc             	mov    -0x24(%rbp),%eax
    119b:	89 c2                	mov    %eax,%edx
    119d:	89 ce                	mov    %ecx,%esi
    119f:	48 8d 3d 62 0e 00 00 	lea    0xe62(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    11a6:	b8 00 00 00 00       	mov    $0x0,%eax
    11ab:	e8 c0 fe ff ff       	callq  1070 <printf@plt>
    11b0:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
    11b4:	7f 05                	jg     11bb <fibonacci+0x52>
    11b6:	8b 45 dc             	mov    -0x24(%rbp),%eax
    11b9:	eb 1e                	jmp    11d9 <fibonacci+0x70>
    11bb:	8b 45 dc             	mov    -0x24(%rbp),%eax
    11be:	83 e8 01             	sub    $0x1,%eax
    11c1:	89 c7                	mov    %eax,%edi
    11c3:	e8 a1 ff ff ff       	callq  1169 <fibonacci>
    11c8:	89 c3                	mov    %eax,%ebx
    11ca:	8b 45 dc             	mov    -0x24(%rbp),%eax
    11cd:	83 e8 02             	sub    $0x2,%eax
    11d0:	89 c7                	mov    %eax,%edi
    11d2:	e8 92 ff ff ff       	callq  1169 <fibonacci>
    11d7:	01 d8                	add    %ebx,%eax
    11d9:	48 83 c4 28          	add    $0x28,%rsp
    11dd:	5b                   	pop    %rbx
    11de:	5d                   	pop    %rbp
    11df:	c3                   	retq   

00000000000011e0 <main>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	55                   	push   %rbp
    11e5:	48 89 e5             	mov    %rsp,%rbp
    11e8:	48 83 ec 20          	sub    $0x20,%rsp
    11ec:	e8 6f fe ff ff       	callq  1060 <clock@plt>
    11f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    11f5:	c7 45 e8 19 00 00 00 	movl   $0x19,-0x18(%rbp)
    11fc:	8b 45 e8             	mov    -0x18(%rbp),%eax
    11ff:	89 c7                	mov    %eax,%edi
    1201:	e8 63 ff ff ff       	callq  1169 <fibonacci>
    1206:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1209:	8b 55 ec             	mov    -0x14(%rbp),%edx
    120c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    120f:	89 c6                	mov    %eax,%esi
    1211:	48 8d 3d 13 0e 00 00 	lea    0xe13(%rip),%rdi        # 202b <_IO_stdin_used+0x2b>
    1218:	b8 00 00 00 00       	mov    $0x0,%eax
    121d:	e8 4e fe ff ff       	callq  1070 <printf@plt>
    1222:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%rbp)
    1229:	e8 32 fe ff ff       	callq  1060 <clock@plt>
    122e:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    1232:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1236:	f2 48 0f 2a 45 f0    	cvtsi2sdq -0x10(%rbp),%xmm0
    123c:	f2 0f 10 0d 34 0e 00 	movsd  0xe34(%rip),%xmm1        # 2078 <_IO_stdin_used+0x78>
    1243:	00 
    1244:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1248:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    124d:	f2 48 0f 2a 45 f0    	cvtsi2sdq -0x10(%rbp),%xmm0
    1253:	f2 0f 10 4d f8       	movsd  -0x8(%rbp),%xmm1
    1258:	48 8d 3d e1 0d 00 00 	lea    0xde1(%rip),%rdi        # 2040 <_IO_stdin_used+0x40>
    125f:	b8 02 00 00 00       	mov    $0x2,%eax
    1264:	e8 07 fe ff ff       	callq  1070 <printf@plt>
    1269:	b8 00 00 00 00       	mov    $0x0,%eax
    126e:	c9                   	leaveq 
    126f:	c3                   	retq   

0000000000001270 <helper_func>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	55                   	push   %rbp
    1275:	48 89 e5             	mov    %rsp,%rbp
    1278:	c7 45 e8 2d 00 00 00 	movl   $0x2d,-0x18(%rbp)
    127f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1282:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    1285:	c7 45 e8 d5 00 00 00 	movl   $0xd5,-0x18(%rbp)
    128c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    1293:	eb 5c                	jmp    12f1 <helper_func+0x81>
    1295:	c7 45 f0 18 00 00 00 	movl   $0x18,-0x10(%rbp)
    129c:	8b 45 f0             	mov    -0x10(%rbp),%eax
    129f:	01 c0                	add    %eax,%eax
    12a1:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12a4:	8b 55 e8             	mov    -0x18(%rbp),%edx
    12a7:	89 d0                	mov    %edx,%eax
    12a9:	c1 e0 02             	shl    $0x2,%eax
    12ac:	01 d0                	add    %edx,%eax
    12ae:	f7 d8                	neg    %eax
    12b0:	8b 55 f4             	mov    -0xc(%rbp),%edx
    12b3:	01 d0                	add    %edx,%eax
    12b5:	89 45 f8             	mov    %eax,-0x8(%rbp)
    12b8:	8b 45 f4             	mov    -0xc(%rbp),%eax
    12bb:	6b c0 2d             	imul   $0x2d,%eax,%eax
    12be:	48 63 d0             	movslq %eax,%rdx
    12c1:	48 69 d2 cf f6 e2 7b 	imul   $0x7be2f6cf,%rdx,%rdx
    12c8:	48 c1 ea 20          	shr    $0x20,%rdx
    12cc:	c1 fa 08             	sar    $0x8,%edx
    12cf:	c1 f8 1f             	sar    $0x1f,%eax
    12d2:	29 c2                	sub    %eax,%edx
    12d4:	89 d0                	mov    %edx,%eax
    12d6:	69 c0 fa 9c 03 06    	imul   $0x6039cfa,%eax,%eax
    12dc:	89 45 fc             	mov    %eax,-0x4(%rbp)
    12df:	8b 55 f4             	mov    -0xc(%rbp),%edx
    12e2:	8b 45 f8             	mov    -0x8(%rbp),%eax
    12e5:	01 d0                	add    %edx,%eax
    12e7:	2b 45 fc             	sub    -0x4(%rbp),%eax
    12ea:	89 45 ec             	mov    %eax,-0x14(%rbp)
    12ed:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    12f1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12f4:	6b c0 64             	imul   $0x64,%eax,%eax
    12f7:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    12fa:	7c 99                	jl     1295 <helper_func+0x25>
    12fc:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12ff:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1302:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1305:	5d                   	pop    %rbp
    1306:	c3                   	retq   
    1307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    130e:	00 00 

0000000000001310 <__libc_csu_init>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	41 57                	push   %r15
    1316:	4c 8d 3d 93 2a 00 00 	lea    0x2a93(%rip),%r15        # 3db0 <__frame_dummy_init_array_entry>
    131d:	41 56                	push   %r14
    131f:	49 89 d6             	mov    %rdx,%r14
    1322:	41 55                	push   %r13
    1324:	49 89 f5             	mov    %rsi,%r13
    1327:	41 54                	push   %r12
    1329:	41 89 fc             	mov    %edi,%r12d
    132c:	55                   	push   %rbp
    132d:	48 8d 2d 84 2a 00 00 	lea    0x2a84(%rip),%rbp        # 3db8 <__do_global_dtors_aux_fini_array_entry>
    1334:	53                   	push   %rbx
    1335:	4c 29 fd             	sub    %r15,%rbp
    1338:	48 83 ec 08          	sub    $0x8,%rsp
    133c:	e8 bf fc ff ff       	callq  1000 <_init>
    1341:	48 c1 fd 03          	sar    $0x3,%rbp
    1345:	74 1f                	je     1366 <__libc_csu_init+0x56>
    1347:	31 db                	xor    %ebx,%ebx
    1349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1350:	4c 89 f2             	mov    %r14,%rdx
    1353:	4c 89 ee             	mov    %r13,%rsi
    1356:	44 89 e7             	mov    %r12d,%edi
    1359:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    135d:	48 83 c3 01          	add    $0x1,%rbx
    1361:	48 39 dd             	cmp    %rbx,%rbp
    1364:	75 ea                	jne    1350 <__libc_csu_init+0x40>
    1366:	48 83 c4 08          	add    $0x8,%rsp
    136a:	5b                   	pop    %rbx
    136b:	5d                   	pop    %rbp
    136c:	41 5c                	pop    %r12
    136e:	41 5d                	pop    %r13
    1370:	41 5e                	pop    %r14
    1372:	41 5f                	pop    %r15
    1374:	c3                   	retq   
    1375:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    137c:	00 00 00 00 

0000000000001380 <__libc_csu_fini>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	c3                   	retq   

Disassembly of section .fini:

0000000000001388 <_fini>:
    1388:	f3 0f 1e fa          	endbr64 
    138c:	48 83 ec 08          	sub    $0x8,%rsp
    1390:	48 83 c4 08          	add    $0x8,%rsp
    1394:	c3                   	retq   
